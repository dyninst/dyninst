# Find Dyninst-provided third-party library modules without tainting the user's paths
set(_DYNINST_module_path_save "${CMAKE_MODULE_PATH}")
list(INSERT CMAKE_MODULE_PATH 0 "${CMAKE_CURRENT_LIST_DIR}/Modules"
     "${CMAKE_CURRENT_LIST_DIR}/tpls")

include(DyninstBoost)
include(DyninstElfUtils)
include(DyninstTBB)

set(CMAKE_MODULE_PATH ${_DYNINST_module_path_save})
unset(_DYNINST_module_path_save)

@PACKAGE_INIT@

include("${CMAKE_CURRENT_LIST_DIR}/DyninstTargets.cmake")

# Other variables Dyninst mutators may depend on
set(DYNINST_PLATFORM "@DYNINST_PLATFORM@")
set(DYNINST_INTERNAL_DEFINES @DYNINST_PLATFORM_CAPABILITIES@)

foreach(COMP ${Dyninst_FIND_COMPONENTS})
  if(TARGET Dyninst::${COMP})
    set(Dyninst_${COMP}_FOUND TRUE)
  else()
    message(FATAL_ERROR "Unknown Dyninst component '${COMP}'")
  endif()
endforeach()

check_required_components(Dyninst)

# -- DO NOT USE -- This is for legacy purposes only
set_and_check(DYNINST_INCLUDE_DIR
              "${CMAKE_CURRENT_LIST_DIR}/../../../@DYNINST_INSTALL_INCLUDEDIR@")
