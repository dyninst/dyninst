name: Build Consumers

on:
  schedule:
    - cron: '0 3 * * 1' # Monday at 3AM
  workflow_dispatch:

jobs:

  get-oses:
    runs-on: ubuntu-latest
    outputs:
      latest: ${{ steps.all.outputs.latest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: all
        uses: ./.github/actions/os-versions

  get-compilers:
    runs-on: ubuntu-latest
    outputs:
      all: ${{ steps.compilers.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - id: compilers
        shell: bash
        run: |
          set -ex
          script="./.github/scripts/compiler_configs.py"
          names=$(python3 ${script} --print-names)
          echo "value=${names}" >> $GITHUB_OUTPUT


  hpctoolkit:
    runs-on: ubuntu-latest
    needs: [get-oses, get-compilers]
    strategy:
      fail-fast: false
      matrix:
         os: ${{ fromJson(needs.get-oses.outputs.latest) }}
         compiler: ${{ fromJson(needs.get-compilers.outputs.all) }}
    permissions:
      packages: read
    container:
      image: ghcr.io/hainest/amd64/${{ matrix.os }}:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}
    name: HPCToolkit (${{ matrix.os }}, ${{ matrix.compiler }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: "src"  # relative to $GITHUB_WORKSPACE

      - name: Install dependencies (Ubuntu)
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        shell: bash
        run: |
          set -ex
          apt update -qq
          apt install -y -qq gfortran m4 autoconf python3 meson ninja-build pkgconf curl libgtest-dev libgmock-dev

      - name: Install dependencies (Fedora)
        if: ${{ startsWith(matrix.os, 'fedora') }}
        shell: bash
        run: |
          set -ex
          yum install -y gcc-gfortran m4 autoconf python3 python3-devel meson ninja-build pkgconf curl gtest-devel gmock-devel patch which

      - name: Install spack
        shell: bash
        run: |
          set -ex
          git clone --depth=1 --branch=develop https://github.com/spack/spack
          spack/bin/spack compiler find
          
          # Fedora 41's python-13 breaks spack's from-source installation of pyclingo
          if test "${{ matrix.os }}" = "fedora-41"; then
            pip3 install clingo
          fi
          spack/bin/spack bootstrap now

      - name: Install spack externals
        shell: bash
        run: |
          set -ex
          spack/bin/spack external find --not-buildable cmake git m4 gmake meson ninja pkgconf curl python curl cmake
          
          add="${GITHUB_WORKSPACE}/src/.github/scripts/add_spack_package.py"
          python3 ${add} $HOME/.spack --lib dyninst --version master --location /dyninst/install

      - name: Build
        shell: bash
        run: |
          set -ex
          spack/bin/spack install -j2 hpctoolkit@develop~viewer~papi ^intel-tbb ^dyninst@master %${{ matrix.compiler }}
