# Check for ABI changes relative to the most-recent development build.
#
# NOTE: The diff is not done relative to the most-recent release build
#       so we do get ABI breakage errors that aren't caused by the
#       current PR.

name: Libabigail ABI Checks

on: 
  pull_request:
     types: [opened, synchronize, reopened, ready_for_review]
     branches:
        - master
     paths:
       - '**.h'
       - '**.C'
       - '**.c'
  workflow_dispatch:

jobs:

  # Don't run the check if the PR is a draft or already marked as an ABI break
  check-if-needed:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.draft == false && !contains(github.event.pull_request.labels.*.name, 'ABI-BREAKER') }}
    steps:
      - shell: bash
        run: true

  get-oses:
    runs-on: ubuntu-latest
    needs: check-if-needed
    outputs:
      latest: ${{ steps.all.outputs.latest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: all
        uses: ./.github/actions/os-versions

  get-compilers:
    runs-on: ubuntu-latest
    needs: check-if-needed
    outputs:
      all: ${{ steps.compilers.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - id: compilers
        shell: bash
        run: |
          set -ex
          script="./.github/scripts/compiler_configs.py"
          names=$(python3 ${script} --print-names)
          echo "value=${names}" >> $GITHUB_OUTPUT

  libabigail:
    runs-on: ubuntu-latest
    needs: [get-oses, get-compilers]
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(needs.get-oses.outputs.latest) }}
        compiler: ${{ fromJson(needs.get-compilers.outputs.all) }}
    permissions:
      packages: read
    container:
      image: ghcr.io/dyninst/amd64/${{ matrix.os }}:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}
    name: libabigail (${{ matrix.os }}, ${{ matrix.compiler }})
    steps:
      - name: Checkout Dyninst
        uses: actions/checkout@v4
        with:
          path: "src"  # relative to ${GITHUB_WORKSPACE}

      - name: Build Current Dyninst
        uses: ./src/.github/actions/build
        with:
          os: ${{ matrix.os }}
          compiler: ${{ matrix.compiler }}
          src-dir: "${GITHUB_WORKSPACE}/src"
          install-dir: "${GITHUB_WORKSPACE}/install"

      - name: Build Previous Dyninst
        if: ${{ matrix.compiler != 'gcc' }}
        uses: ./src/.github/actions/build
        with:
          os: ${{ matrix.os }}
          compiler: ${{ matrix.compiler }}
          src-dir: "/dyninst/src"
          install-dir: "/dyninst/install"

      - name: Install dependencies (Ubuntu)
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          set -ex
          apt update -qq
          apt install -y libxml2-dev autoconf libtool libxxhash-dev

      - name: Install dependencies (Fedora)
        if: ${{ startsWith(matrix.os, 'fedora') }}
        run: |
          set -ex
          yum install -y libxml2-devel autoconf libtool xxhash-devel

      - name: Build libabigail
        run: |
          set -ex
          git clone --depth=1 git://sourceware.org/git/libabigail.git
          cd libabigail
          autoreconf -i
          mkdir build; cd build
          ../configure --prefix=/libabigail/install
          make -j2
          make install

      - name: Run abidiff
        shell: bash
        run: |
          # Don't use 'vx' here because abidiff is very chatty
          set -e
          
          declare -a libs=(
            "libcommon.so" "libdyninstAPI_RT.so" "libdyninstAPI.so" "libinstructionAPI.so"
            "libparseAPI.so" "libpatchAPI.so" "libpcontrol.so" "libstackwalk.so"
            "libsymtabAPI.so"
          )

          params="--exported-interfaces-only "  # only public symbols
          params+="--deleted-fns "              # deleted public functions
          params+="--changed-fns "              # changed public functions
          params+="--deleted-vars "             # deleted public variables
          params+="--added-vars "               # added variables in classes
          params+="--changed-vars "             # changed variables in classes
          params+="--no-added-syms "            # ignore added symbols
          params+="--no-unreferenced-symbols "  # ignore changes about symbols not referenced by debug info
          
          # library directory suffix
          lib_dir_suffix=""
          if grep -qi "fedora" /etc/os-release; then
            lib_dir_suffix="64"
          fi
          
          prev=/dyninst/install/lib${lib_dir_suffix}
          cur=${GITHUB_WORKSPACE}/install/lib${lib_dir_suffix}
          
          export PATH=/libabigail/install/bin:$PATH

          status=0
          for l in "${libs[@]}"; do
            echo "Diffing $l"
            cur_status=0
            output=`abidiff ${params} ${prev}/$l ${cur}/$l 2>&1` || cur_status=1
            if test "${cur_status}" = "1"; then
              printf '=%.0s' {1..100}; echo
              printf "Found an ABI breakage\n\n"
              printf "$output\n\n"
              printf '=%.0s' {1..100}; echo
              status=1
            else
              printf "OK\n\n"
            fi
          done

          exit $status
