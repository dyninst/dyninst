name: Build Deploy Containers

on:

  # Always have a base image ready to go - this is a nightly build
  schedule:
    - cron: 0 3 * * *

  # On push to main we build and deploy images
  push: 
    branches:
      - master
 
jobs:
  build:
    permissions:
      packages: write
    strategy:
      fail-fast: false
      matrix:

        # Note: this can be extended in two ways
        # 1. Add more configurations to the matrix, either like this or flattening
        # 2. Generate matrix programatically and pipe in (recommended)
        # perl is 5.30.0 provided by 20.04 container base
        ubuntu: ["20.04"]
        boost: ["1.71.0"]
        elfutils: ["0.186"]
        libiberty: ["2.33.1"] 
        inteltbb: ["2020.3"]
        cmake: ["3.16.3"]

    runs-on: ubuntu-latest
    name: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Make Space For Build
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc

      - name: Set Organization Name
        if: (github.event_name != 'schedule')
        env:
          org: ${{ github.event.repository.owner.login }}
        run: echo "org=${org}" >> ${GITHUB_ENV}

      - name: Set Organization Name
        if: (github.event_name == 'schedule')
        run: echo "org=dyninst" >> ${GITHUB_ENV}

      - name: Pull Layers for "Cache"
        run: docker pull ghcr.io/${org}/dyninst-ubuntu-${{ matrix.ubuntu }}:latest || echo "No cache available"

      - name: Build Dyninst Base Container
        run: |
           cd docker/
           docker build --build-arg ubuntu_version=${{ matrix.ubuntu }} \
                        --build-arg BOOST_VERSION=${{ matrix.boost }} \
                        --build-arg ELFUTILS_VERSION=${{ matrix.elfutils }} \
                        --build-arg LIBIBERTY_VERSION=${{ matrix.libiberty }} \
                        --build-arg INTELTBB_VERSION=${{ matrix.inteltbb }} \
                        --build-arg CMAKE_VERSION=${{ matrix.cmake }} \
                        -f Dockerfile \
                        -t ghcr.io/${org}/dyninst-ubuntu-${{ matrix.ubuntu }}:latest ../

      - name: GHCR Login
        if: (github.event_name != 'pull_request')
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy
        if: (github.event_name != 'pull_request')
        run: docker push ghcr.io/${org}/dyninst-ubuntu-${{ matrix.ubuntu }}:latest
